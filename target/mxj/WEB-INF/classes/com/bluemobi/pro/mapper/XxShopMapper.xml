<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bluemobi.pro.service.impl.XxShopServiceImpl">

	<resultMap type="com.bluemobi.pro.entity.CartVO" id="findCartList">
		<id column="id" property="id" />
		<collection property="list" ofType="com.bluemobi.pro.entity.CartItemVO">
			<id column="cid" property="cid" />
			<result column="quantity" property="quantity" />
			<association property="product" javaType="com.bluemobi.pro.entity.ProductVO">
				<id column="pid" property="pid" />
				<result column="image" property="image" />
				<result column="price" property="price" />
				<result column="full_name" property="fullName" />
				<result column="pcid" property="pcid" />
				<result column="name" property="name" />
			</association>
		</collection>
	</resultMap>

	<!-- 查询基础硬装 -->
	<select id="findBaseDecor" parameterType="long" resultType="map">
		SELECT
		p.`id`,
		p.`name`,
		p.`price` ,
		IFNULL(up.`link_url`,"") link_url,
		IFNULL(up.`qiniu_url`,"") image
		FROM
		xx_product p
		JOIN
		xx_product_picture pp
		ON
		p.`id` = pp.`product_id`
		JOIN
		uhoem_picture up
		ON
		up.`id` = pp.`picture_id`

		WHERE
		p.`product_main_category` = 6
		<if test="_parameter != null and _parameter != ''">
			AND
			p.id = #{_parameter}
		</if>
	</select>

	<select id="findLinkUrl" resultType="map">
		SELECT
		p.link_url,
		p.qiniu_url
		FROM
		uhoem_picture p
		WHERE
		p.pic_no = 5
		AND
		p.pic_seq
		IN
		(1,2)
	</select>

	<!-- 查询关键字 -->
	<select id="search" resultType="map">
		SELECT
		p.name
		FROM
		xx_product_keyword p
		LIMIT 1
	</select>

	<!-- 获取商品规格列表 -->
	<select id="getSpecList" parameterType="string" resultType="map">
		SELECT DISTINCT
		p.id,
		p.name
		FROM
		xx_specification p
		JOIN
		xx_product_specification xp
		ON
		p.`id`= xp.`specifications`
		WHERE
		xp.`products`
		IN
		<foreach collection="list" item="pids" open="(" separator=","
			close=")">
			#{pids}
		</foreach>
	</select>


	<!-- 获取商品规格值列表 -->
	<select id="getSpecvalueList" resultType="map">
		SELECT
		s.id,
		s.specification,
		s.name,
		p.products,
		xp.image,
		xp.full_name,
		xp.name pname,
		xp.price,
		xpc.id xpcid
		FROM
		xx_specification_value s
		JOIN
		xx_product_specification_value p
		ON
		s.`id` = p.`specification_values`
		JOIN
		xx_specification sp
		ON
		sp.`id` = s.`specification`
		JOIN
		xx_product xp
		ON
		p.products = xp.id
		JOIN
		xx_product_category xpc
		ON
		xpc.id = xp.product_main_category
		WHERE
		p.`products`
		IN
		<foreach item="pids" collection="list" open="(" separator=","
			close=")">
			#{pids}
		</foreach>
	</select>

	<!-- 保存购物车 -->
	<insert id="insertCart" parameterType="map" useGeneratedKeys="true"
		keyProperty="id">
		INSERT INTO
		xx_cart (create_date,modify_date,cart_key,member)
		VALUES
		(#{create_date},#{modify_date},#{cart_key},#{memberId})
	</insert>

	<!-- 保存购物车详情 -->
	<insert id="insertCartItem" parameterType="map">
		INSERT INTO
		xx_cart_item (create_date,modify_date,quantity,cart,product,flag)
		VALUES
		(#{create_date},#{modify_date},#{quantity},#{cartId},#{productId},#{flag})
	</insert>

	<!-- 获取该上商品在购物车中是否存在 -->
	<select id="countCart" parameterType="map" resultType="map">
		SELECT
		count(*) AS cart_num,
		c.id,
		ci.id cid,
		p.product_main_category pmc
		FROM
		xx_cart c,xx_cart_item ci,xx_product p
		WHERE
		c.id = ci.cart
		AND
		p.id = ci.product
		AND
		c.member = #{memberId}
		AND
		ci.product = #{productId}
	</select>

	<!-- 更新购物车的数量 -->
	<update id="updateCartCount" parameterType="map">
		UPDATE
		xx_cart_item ci
		SET
		ci.quantity = (ci.quantity + #{quantity})
		WHERE
		ci.cart = #{cart}
		AND
		ci.product = #{productId}
	</update>

	<!-- 查询订单状态 -->
	<select id="findOrderStatus" parameterType="map" resultType="int">
		SELECT
			t.order_status
		FROM
			xx_order t
		WHERE
			t.id = #{orderId}
	</select>
	
	<!-- 评论商品 -->
	<insert id="insertComment" parameterType="map">
		INSERT INTO
		xx_review
		(
		create_date,
		modify_date,
		content,
		ip,
		is_show,
		score,
		member,
		reply_member,
		product,
		item
		)
		VALUES
		(
		#{create_date},
		#{modify_date},
		#{content},
		#{ip},
		#{is_show},
		#{score},
		#{memberId},
		#{reply_member},
		#{productId},
		#{item}
		)
	</insert>

	<!-- 查询商品ID -->
	<select id="findCommentByProductId" parameterType="map"
		resultType="map">
		SELECT
		r.id,
		r.create_date,
		IFNULL(r.content,"") content,
		r.score,
		IFNULL(m.face_image,"") image,
		IFNULL(m.name,"") name,
		IFNULL(
		(SELECT
		o.create_date
		FROM
		xx_order o
		WHERE
		o.id = r.item
		),"" ) AS buy_time
		FROM
		xx_review r
		LEFT JOIN
		uhoem_member m
		ON
		r.member = m.id
		WHERE
		1 = 1
		AND
		r.product = #{productId}
		<if test="type == 1">
			AND r.score = 1
		</if>
		<if test="type == 2">
			AND (r.score = 2 or r.score = 3)
		</if>
		<if test="type == 3">
			AND (r.score = 4 or r.score = 5)
		</if>
		ORDER BY
		r.create_date
		DESC
	</select>

	<!-- 根据商品id查询该商品类别的所有商品 -->
	<select id="getProductByPid" parameterType="map" resultType="map">
		SELECT
		p.id
		FROM
		xx_product p
		WHERE
		p.goods = (SELECT goods FROM xx_product pp WHERE pp.id = #{productId})
	</select>


	<!-- 查询商品详细信息 -->
	<select id="findProductDetail" parameterType="long" resultType="map">
		SELECT
		p.id,
		p.full_name,
		p.is_gift,
		p.price,
		p.sn,
		p.name,
		p.image,
		p.weight,
		p.product_main_category
		FROM
		xx_product p
		WHERE
		p.id = #{productId}
	</select>

	<!-- 查询订单详情 -->
	<select id="orderDetail" parameterType="map" resultType="map">
		SELECT
		o.sn,
		o.consignee,
		o.phone,
		o.address,
		oi.full_name,
		oi.price,
		oi.thumbnail image,
		o.payment_method_name,
		o.expire,
		o.freight
		FROM
		xx_order o
		JOIN
		xx_order_item oi
		ON
		o.id = oi.orders
		WHERE
		o.id = #{orderId}
	</select>

	<!-- 删除购物车 -->
	<delete id="deleteCart" parameterType="long">
		DELETE FROM
		xx_cart
		WHERE
		id = #{cartId}
	</delete>

	<!-- 删除购物车项 -->
	<delete id="deleteCartItem" parameterType="long">
		DELETE FROM
		xx_cart_item
		WHERE
		id = #{cartItemId}
	</delete>

	<!-- 根据用户ID和商品ID查询购物车项ID -->
	<select id="findCartItemId" parameterType="map" resultType="long">
		SELECT
		oi.id
		FROM
		xx_cart_item oi
		JOIN
		xx_cart o
		ON
		oi.cart = o.id
		WHERE
		o.member = #{memberId}
		AND
		oi.product = #{productId}
	</select>

	<!-- 更新购物车memberId -->
	<update id="updateCartMember" parameterType="map">
		UPDATE
		xx_cart c
		SET
		c.member = #{memberId}
		WHERE
		c.id = #{cartId}
	</update>

	<!-- 获取购物车列表 -->
	<select id="findCartList" parameterType="map" resultMap="findCartList">
		SELECT
		c.id id,
		ci.id cid,
		p.id pid,
		p.image,
		p.price,
		p.full_name,
		pc.id pcid,
		ci.quantity,
		p.name
		FROM
		xx_cart c
		JOIN
		xx_cart_item ci
		ON
		c.id = ci.cart
		JOIN
		xx_product p
		ON
		ci.product = p.id
		JOIN
		xx_product_category pc
		ON
		p.product_main_category = pc.id
		WHERE
		c.member = #{memberId}
	</select>

	<!-- 查询cartitem对应的cart数量 -->
	<select id="countCartNumByCartItemId" parameterType="long"
		resultType="map">
		SELECT
		COUNT(ci.`id`) cartnum,
		ci.`cart` cartId
		FROM
		xx_cart_item ci
		WHERE ci.cart = (SELECT xx.cart FROM xx_cart_item xx WHERE xx.`id` =
		#{cartItemId} LIMIT 1)
	</select>

	<!-- 新增支付记录 -->
	<insert id="insertPayment" parameterType="com.bluemobi.pay.Payment">
		INSERT INTO
		xx_payment
		(
		create_date,
		modify_date,
		account,
		amount,
		bank,
		expire,
		fee,
		memo,
		method,
		operator,
		payer,
		payment_date,
		payment_method,
		payment_plugin_id,
		sn,
		status,
		type,
		member,
		orders
		)
		VALUES
		(
		#{create_date},
		#{motify_date},
		#{accout},
		#{amount},
		#{bank},
		#{expire},
		#{fee},
		#{memo},
		#{method},
		#{operator},
		#{payer},
		#{paymentDate},
		#{paymemntMethod},
		#{paymentPluginId},
		#{sn},
		#{status},
		#{type},
		#{member},
		#{orders}
		)
	</insert>

	<!-- 更新支付记录 -->
	<update id="updatePayment" parameterType="com.bluemobi.pay.Payment">
		UPDATE
		xx_payment
		SET
		status = #{status}
		WHERE
		sn = #{sn}
	</update>

	<!-- 根据用户查询购物车基础硬装数据 -->
	<select id="findBaseDecorByMemberId" parameterType="map"
		resultType="map">
		SELECT
		c.id id,
		ci.id cid,
		p.id pid,
		p.image,
		p.price,
		p.full_name,
		ci.quantity,
		p.name
		FROM
		xx_cart c,
		xx_cart_item ci,
		xx_product p
		WHERE
		c.id = ci.cart
		AND
		ci.product = p.id
		AND
		p.product_main_category = 6
		AND
		c.member = #{memberId}
	</select>

	<select id="findCartItemId2" parameterType="map" resultType="map">
		SELECT
		ci.id cartItemId
		FROM
		xx_cart c,
		xx_cart_item ci,
		xx_product p
		WHERE
		c.member = #{memberId}
		AND
		c.id = ci.cart
		AND
		ci.product = p.id
		AND
		p.product_main_category = 6
	</select>

	<!-- 根据用户ID 查询购物车，避免购物车表出现用户ID 相同的数据 -->
	<select id="findCartIdBbyMemebrId" parameterType="map"
		resultType="long">
		SELECT
		c.id
		FROM
		xx_cart c
		WHERE
		c.member = #{member}
	</select>

	<!-- 查询两房面积 -->
	<select id="findCoveredAreaByMember" parameterType="map"
		resultType="double">
		SELECT
		o.covered_area
		FROM
		uhoem_erp_measure_house_order o
		WHERE
		o.member = #{memberId}
	</select>

	<!-- 修改订单信息 -->
	<update id="modifyCart" parameterType="map">
		UPDATE
		xx_cart_item ox
		SET
		ox.quantity = #{quantity}
		WHERE
		ox.id = #{cartItemId}
	</update>

	<!-- 根据用户id，产品id删除查找购物车信息 <select id="selectCartByOrder" parameterType="map" 
		parameterMap="map"> SELECT COUNT(ci.`id`) count, c.`id` cid, ci.`id` ciid 
		FROM xx_cart c, xx_cart_item ci WHERE c.`id` = ci.`cart` AND c.`member` = 
		#{memberId} AND ci.`product` = #{productId} </select> -->

    <!-- 删除购物车项数据 -->
	<delete id="deleteCartByProductId" parameterType="map">
		DELETE
		FROM
			xx_cart_item
		WHERE
		    id = 
			(SELECT
				a.cid
			 FROM
			(
				(SELECT
					ci.`id` cid
				FROM
					xx_cart c,
					xx_cart_item ci
				WHERE 
					c.`id` = ci.`cart`
				AND 
					c.`member` = #{memberId}
				AND 
					ci.`product` = #{productId})
			) a)
	</delete>
</mapper> 